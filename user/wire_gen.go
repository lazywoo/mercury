// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/lazywoo/mercury/pkg/wego"
	"github.com/lazywoo/mercury/user/grpc"
	"github.com/lazywoo/mercury/user/ioc"
	"github.com/lazywoo/mercury/user/repository"
	"github.com/lazywoo/mercury/user/repository/cache"
	"github.com/lazywoo/mercury/user/repository/dao"
	"github.com/lazywoo/mercury/user/service"
)

// Injectors from wire.go:

func InitAPP() *wego.App {
	logger := ioc.InitLogger()
	db := ioc.InitDB(logger)
	userDAO := dao.NewGORMUserDAO(db)
	cmdable := ioc.InitRedis()
	userCache := cache.NewUserRedisCache(cmdable)
	userRepository := repository.NewCachedUserRepository(userDAO, userCache)
	userService := service.NewUserService(userRepository, logger)
	userServiceServer := grpc.NewUserServiceServer(userService)
	server := ioc.InitGRPCxServer(userServiceServer, logger)
	app := &wego.App{
		GRPCServer: server,
	}
	return app
}

// wire.go:

var thirdProviderSet = wire.NewSet(ioc.InitDB, ioc.InitRedis, ioc.InitLogger, ioc.InitEtcdClient)

var svcProviderSet = wire.NewSet(grpc.NewUserServiceServer, service.NewUserService, repository.NewCachedUserRepository, dao.NewGORMUserDAO, cache.NewUserRedisCache)
